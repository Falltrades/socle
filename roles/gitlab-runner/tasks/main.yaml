- name: Get Gitlab namespace
  kubernetes.core.k8s_info:
    kind: Namespace
    name: "{{ dsc.gitlab.namespace }}"
  register: gitlab_ns

- name: Fail if Gitlab namespace is not present
  ansible.builtin.fail:
    msg: "Gitlab ne semble pas avoir été provisionné sur le cluster veuillez l'installer avant"
  when: gitlab_ns | length == 0

- name: Get dso-config inventory
  kubernetes.core.k8s_info:
    namespace: "{{ dsc.console.namespace }}"
    kind: ConfigMap
    name: dso-config
  register: ansible_inventory

- name: Get gitlab token
  ansible.builtin.set_fact:
    gitlab_token: "{{ ansible_inventory.resources[0].data.GITLAB_TOKEN }}"

- name: Initiate a runner in GitLab instance
  ansible.builtin.uri:
    validate_certs: "{{ dsc.exposedCA.type == 'none' }}"
    url: "https://{{ gitlab_domain }}/api/v4/user/runners"
    method: POST
    headers:
      "PRIVATE-TOKEN": "{{ gitlab_token }}"
    body:
      runner_type: instance_type
      group_id: 1
      description: Default-instance-runner
      platform: null
      run_untagged: true
    body_format: form-urlencoded
  changed_when: true

- meta: end_play



- name: Add GitLab Runner helm repo
  kubernetes.core.helm_repository:
    name: gitlab
    repo_url: https://charts.gitlab.io

- name: Set GitLab Runner helm values
  ansible.builtin.set_fact:
    runner_values: "{{ lookup('template', 'values.yaml.j2') | from_yaml }}"

- name: Deploy GitLab Runner helm
  kubernetes.core.helm:
    name: gitlab-runner
    chart_ref: gitlab/gitlab-runner
    chart_version: "{{ dsc.gitlabRunner.chartVersion }}"
    release_namespace: "{{ dsc.gitlab.namespace }}"
    values: "{{ runner_values }}"
