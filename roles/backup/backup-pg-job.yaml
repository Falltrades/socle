apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
  namespace: keycloak-system
spec:
  schedule: "0 6 * * *"
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          initContainers:
            - name: dump
              image: postgres:12.1-alpine
              volumeMounts:
                - name: data
                  mountPath: /backup
              args:
                - pg_dump
                - "-Fc"
                - "-f"
                - "/backup/backup_keycloak.pgdump"
                - "-v"
                - "-h"
                - "keycloak-postgresql"
                - "-U"
                - "keycloak"
                - "-d"
                - "root"
              env:
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: keycloak-db-secret
                      key: POSTGRES_PASSWORD
          containers:
            - name: s3
              image: mesosphere/aws-cli
              volumeMounts:
                - name: data
                  mountPath: /backup
                - name: config-volume
                  mountPath: /backup-script
              env:
                - name: BUCKET_HOST
                  valueFrom:
                    configMapKeyRef:
                      name: dso-backup-bucket
                      key: BUCKET_HOST
                - name: BUCKET_PORT
                  valueFrom:
                    configMapKeyRef:
                      name: dso-backup-bucket
                      key: BUCKET_PORT
                - name: BUCKET_NAME
                  valueFrom:
                    configMapKeyRef:
                      name: dso-backup-bucket
                      key: BUCKET_NAME
                - name: BUCKET_REGION
                  valueFrom:
                    configMapKeyRef:
                      name: dso-backup-bucket
                      key: BUCKET_REGION
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: dso-backup-bucket
                      key: AWS_ACCESS_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: dso-backup-bucket
                      key: AWS_SECRET_ACCESS_KEY
              command: ["/backup-script/backup-s3.sh"]
          restartPolicy: Never
          volumes:
            - name: config-volume
              configMap:
                name: backup-s3.sh
                defaultMode: 0777
            - name: data
              emptyDir: {}
