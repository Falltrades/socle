- name: Apply project
  kubernetes.core.k8s:
    template: project.j2

- name: Get console frontend client secret
  kubernetes.core.k8s_info:
    kind: Secret
    namespace: "{{ dsc.keycloak.namespace }}"
    name: keycloak-client-secret-console-frontend
  register: console_frontend_secret
  failed_when: console_frontend_secret.resources | length == 0

- name: Get console backend client secret
  kubernetes.core.k8s_info:
    kind: Secret
    namespace: "{{ dsc.keycloak.namespace }}"
    name: keycloak-client-secret-console-backend
  register: console_backend_secret
  failed_when: console_backend_secret.resources | length == 0

- name: Get old app.yaml
  kubernetes.core.k8s_info:
    kind: Application
    namespace: "{{ dsc.argocd.namespace }}"
    name: console-pi-native
  register: console_app

- name: Generate new values (first deployment)
  ansible.builtin.set_fact:
    session_secret: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters') }}"
  when: console_app.resources | length == 0

- name: Set bundle-ca cm
  kubernetes.core.k8s:
    name: bundle
    namespace: "{{ dsc.console.namespace }}"
    kind: ConfigMap
    api_version: v1
    definition:
      data:
        ca.pem: |
          {{ exposed_ca_pem }}
  when: dsc.exposedCA.type != 'none'

- name: Prepare console helm values
  ansible.builtin.set_fact:
    console_values: "{{ lookup('template', 'values.yaml.j2') | from_yaml }}"

- name: Merge with proxy settings
  when: dsc.proxy.enabled
  block:
  - ansible.builtin.set_fact:
      console_proxy_values: "{{ lookup('template', 'proxy-values.yaml.j2') | from_yaml }}"
  - name: Merge with console proxy values
    ansible.builtin.set_fact:
      console_values: "{{ console_values | combine(console_proxy_values, recursive=True, list_merge='append') }}"

- name: Merge with console user values
  ansible.builtin.set_fact:
    console_values: "{{ console_values | combine(dsc.console['values'], recursive=True, list_merge='append') }}"

- name: Apply app
  kubernetes.core.k8s:
    template: app.yaml.j2
