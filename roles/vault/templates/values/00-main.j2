global:
  openshift: true
{% if dsc.global.metrics.enabled %}
  serverTelemetry:
    prometheusOperator: true
{% endif %}
injector:
{% if dsc.global.metrics.enabled %}
  metrics:
    enabled: true
{% endif %}
  image:
{% if  dsc.general.registry == "" %}
    repository: docker.io/hashicorp/vault-k8s
  agentImage:
    repository: docker.io/hashicorp/vault
{% endif %}
{% if dsc.general.registry != "" %}
    repository: "{{ dsc.general.registry }}/hashicorp/vault-k8s"
  agentImage:
    repository: "{{ dsc.general.registry }}/hashicorp/vault"
{% endif %}
server:
{% if dsc.general.registry != "" %}
  image:
    repository: "{{ dsc.general.registry }}/hashicorp/vault"
{% endif %}
  route:
    enabled: false
  ha:
    enabled: false
  standalone:
    enabled: true
{% if dsc.global.metrics.enabled %}
    config: |
      ui = true

      listener "tcp" {
        tls_disable = 1
        address = "[::]:8200"
        cluster_address = "[::]:8201"
        telemetry {
          unauthenticated_metrics_access = "false"
        }
      }
      storage "file" {
        path = "/vault/data"
      }
      telemetry {
        prometheus_retention_time = "30s"
        disable_hostname = true
      }
{% endif %}
  auditStorage:
    enable: true
  dataStorage:
    enable: true
    size: {{ dsc.vault.pvcSize }}
  image:
{% if  dsc.general.registry == "" %}
    repository: docker.io/hashicorp/vault
csi:
  image:
    repository: docker.io/hashicorp/vault-csi-provider
  agent:
    image:
      repository: docker.io/hashicorp/vault
{% endif %}
{% if dsc.general.registry != "" %}
    repository: "{{ dsc.general.registry }}/hashicorp/vault"
csi:
  image:
    repository: "{{ dsc.general.registry }}/hashicorp/vault-csi-provider"
  agent:
    image:
      repository: "{{ dsc.general.registry }}/hashicorp/vault"
{% endif %}
{% if dsc.global.metrics.enabled %}
serverTelemetry:
  serviceMonitor:
    enabled: true
{% endif %}
