- name: Désinstallation du socle DSO
  hosts: localhost
  gather_facts: false

  tasks:

    - name: "Récupération de la conf socle à partir de la dsc conf-dso (défaut)"
      kubernetes.core.k8s_info:
        kind: dsc
        name: conf-dso
        api_version: cloud-pi-native.fr/v1alpha
      register: socle_config
      tags:
        - always

    - name: "Récupération de la conf socle à partir de l'extra var dsc_cr quand définie"
      kubernetes.core.k8s_info:
        kind: dsc
        name: "{{ dsc_cr }}"
        api_version: cloud-pi-native.fr/v1alpha
      register: socle_config_custom
      when: dsc_cr is defined
      tags:
        - always

    - name: "Vérification de socle_config_custom et arrêt si vide"
      when: (dsc_cr is defined) and (socle_config_custom.resources | length == 0)
      tags:
        - always
      block:
        - name: Warning message
          ansible.builtin.debug:
            msg:
              - "Attention ! Vous avez lancé le playbook avec l'option '-e dsc_cr={{ dsc_cr }}'"
              - "mais la ressource dsc nommée '{{ dsc_cr }}' est vide ou inexistante côté cluster !"
              - ""
              - "Vérifiez que vous ne vous êtes pas trompé de nom et que la ressource existe bien, via la commande suivante :"
              - ""
              - " kubectl get dsc {{ dsc_cr }} "
              - ""
              - "Si elle n'est pas trouvée (not found), listez simplement les resources dsc actuellement déclarées :"
              - ""
              - " kubectl get dsc "
              - ""
              - "Puis relancez le playbook avec une resource dsc existante."
              - ""
              - "Rappel : le présent playbook lancé seul, sans extra vars, procédera à des désinstallations d'outils,"
              - "ou de la chaîne DSO complète, en s'appuyant sur les namespaces déclarés dans le dsc par défaut (conf-dso)."

        - name: Exit playbook
          ansible.builtin.meta: end_play

    - name: "Déclaration du fact socle_config quand dsc_cr est définie et non vide"
      ansible.builtin.set_fact:
        socle_config: "{{ socle_config_custom }}"
      when: (socle_config_custom is not skipped) and (socle_config_custom.resources | length > 0)
      tags:
        - always

    - name: "Déclaration du fact dsc_name"
      ansible.builtin.set_fact:
        dsc_name: "{{ socle_config.resources[0].metadata.name }}"
      tags:
        - always

    - name: "Déclaration du fact dsc"
      ansible.builtin.set_fact:
        dsc: "{{ socle_config.resources[0].spec }}"
      tags:
        - always

<<<<<<< HEAD
    - name: "Déclaration des facts config et releases"
      ansible.builtin.set_fact:
        dsc_default_config: "{{ lookup('ansible.builtin.file', './roles/socle-config/files/config.yaml') | from_yaml }}"
        dsc_default_releases: "{{ lookup('ansible.builtin.file', './roles/socle-config/files/releases.yaml') | from_yaml }}"
      tags:
        - always

    - name: "Combinaison des nouveaux facts avec le fact dsc"
      ansible.builtin.set_fact:
        dsc: "{{ dsc_default_releases | combine(dsc_default_config, recursive=True) | combine(dsc, recursive=True) }}"
      tags:
        - always

    - name: "Mise à jour du fact dsc"
      ansible.builtin.set_fact:
        dsc: "{{ dsc.spec }}"
      tags:
        - always

    - name: Suppression de cert-manager
      kubernetes.core.helm:
        name: cert-manager
        release_namespace: cert-manager
        state: absent
        wait: true
      tags:
        - never
        - cert-manager

    - name: "Suppression du namespace cert-manager"
=======
    - name: Suppression de cert-manager
      kubernetes.core.helm:
        name: cert-manager
        release_namespace: cert-manager
        state: absent
        wait: true
      tags:
        - never
        - cert-manager

    - name: Suppression du namespace cert-manager
>>>>>>> d339b26 (refactor: :recycle: installation cert-manager via helm chart)
      kubernetes.core.k8s:
        state: absent
        kind: Namespace
        name: cert-manager
      tags:
        - never
        - cert-manager

    - name: "Désinstallation de Kubed"
      kubernetes.core.helm:
        name: kubed
        chart_ref: appscode/kubed
        release_namespace: openshift-infra
        state: absent
        wait: true
      tags:
        - never
        - confSyncer
        - kubed

    - name: "Suppression de l'instance CloudNativePG"
      kubernetes.core.helm:
        name: cloudnative-pg
        release_namespace: "{{ dsc.cloudnativepg.namespace }}"
        release_state: absent
        wait: true
      tags:
        - never
        - cnpg
        - cloudnativepg

    - name: "Suppression du namespace CloudNativePG"
      kubernetes.core.k8s:
        state: absent
        kind: Namespace
        name: "{{ dsc.cloudnativepg.namespace }}"
      tags:
        - never
        - cnpg
        - cloudnativepg

    - name: "Suppression de l'instance Keycloak"
      kubernetes.core.helm:
        name: keycloak
        release_namespace: "{{ dsc.keycloak.namespace }}"
        state: absent
        wait: true
      tags:
        - keycloak

    - name: "Suppression du namespace Keycloak"
      kubernetes.core.k8s:
        state: absent
        kind: Namespace
        name: "{{ dsc.keycloak.namespace }}"
      tags:
        - keycloak

    - name: "Suppression du namespace Nexus"
      kubernetes.core.k8s:
        state: absent
        kind: Namespace
        name: "{{ dsc.nexus.namespace }}"
      tags:
        - nexus

    - name: "Suppression du namespace Sonarqube"
      kubernetes.core.k8s:
        state: absent
        kind: Namespace
        name: "{{ dsc.sonarqube.namespace }}"
      tags:
        - sonarqube

#    - name: Suppression du gitlab runner
#      kubernetes.core.k8s:
#        state: absent
#        api_version: apps.gitlab.com/v1beta2
#        kind: Runner
#        name: gitlab-runner
#        namespace: "{{ dsc.gitlab.namespace }}"
#      tags:
#        - gitlab-runner
#        - gitlab

    - name: "Suppression du GitLab Runner"
      kubernetes.core.helm:
        name: gitlab-runner
        release_namespace: "{{ dsc.gitlab.namespace }}"
        release_state: absent
        wait: true
      tags:
        - gitlab-runner
        - gitlab

    - name: "Suppression de l'instance GitLab"
      kubernetes.core.k8s:
        state: absent
        api_version: apps.gitlab.com/v1beta1
        kind: GitLab
        name: gitlab
        namespace: "{{ dsc.gitlab.namespace }}"
        wait: true
      tags:
        - gitlab

    - name: "Suppression du namespace GitLab"
      kubernetes.core.k8s:
        state: absent
        kind: Namespace
        name: "{{ dsc.gitlab.namespace }}"
      tags:
        - gitlab

    - name: "Suppression du namespace Vault"
      kubernetes.core.k8s:
        state: absent
        kind: Namespace
        name: "{{ dsc.vault.namespace }}"
      tags:
        - vault

    - name: "Suppression du namespace SOPS"
      kubernetes.core.k8s:
        state: absent
        kind: Namespace
        name: "{{ dsc.sops.namespace }}"
      tags:
        - sops

    - name: "Suppression du namespace ArgoCD"
      kubernetes.core.k8s:
        state: absent
        kind: Namespace
        name: "{{ dsc.argocd.namespace }}"
      tags:
        - argocd
        - argo
        - gitops

    - name: "Suppression du namespace Harbor"
      kubernetes.core.k8s:
        state: absent
        kind: Namespace
        name: "{{ dsc.harbor.namespace }}"
      tags:
        - harbor
        - registry

    - name: "Suppression du namespace Console"
      kubernetes.core.k8s:
        state: absent
        kind: Namespace
        name: "{{ dsc.console.namespace }}"
      tags:
        - console-dso
        - console
